.equ		I2C_MasterAddress	= $32			; адрес регулятора на шине i2c #32

.equ		XTAL				= 16000000
.equ 		baudrate 			= 38400
.equ 		bauddivider 		= (XTAL/(16*baudrate))-1
.equ		MOC_PORT			= PORTD			; Порт подключения MOC
.equ		MOC_PIN				= 6				; Нога подключения MOC


.equ		TM_PORT				= PORTB			; Порт подключения индикатора на TM1637
.equ		TM_DDR				= DDRB			;
.equ		TM_CLK				= 0				; TM1637 синхро SCL
.equ		TM_DIO				= 1				; TM1637 данные SDA
.equ		TM_PIN				= PINB

.equ		CU_HISTORY_LENGTH	= 15			; Длина истории значений CURRENT_U
.equ		DEFAULT_ON_VALUE 	= 18000			; момент включения оптрона по умолчанию. отсчитывается от перехода через ноль сетевого напряжения
.equ		DEFAULT_OFF_VALUE 	= 18000			; момент отключения оптрона
.equ		DEFAULT_TARGET_U	= 1200			; Значение выходного напряжения при старте с зажатой кнопкой энкодера 
.equ		DEFAULT_STEP_U		= 5				; Шаг регулировки напряжения
.equ		MIN_U				= 400			; Минимальное напряжение на выходе
.equ		MAX_U				= 2500			; Минимальное напряжение на выходе
; ----------------------------------------------------------------------------------------
.equ	btnPort			= PORTD
.equ	btnPin			= PIND
.equ	btnPinNo		= 5						; нога порта, куда подключена кнопка энкодера
.equ	encPhaseA		= 3
.equ	encPhaseB		= 4
; ----------------------------------------------------------------------------------------
.equ  BUTTON_HOLDING_TIME  	= 0  ; Пять битов   DButtonStatus[4:0] = счётчик количества полусекунд, в течение которых Кнопка удержива(лась/ется) "нажатой".  (фиксирует время до 16сек!)
.equ  BUTTON_STATUS_CODE  	= 5  ; В трёх битах DButtonStatus[7:5] = кодируется итоговый "статус-код кнопки" (см. ниже макроопределения констант).
.equ  BUTTON_HOLDEN_LONG  	= 5  ; Флаг "времени удержания" кнопки: 0-короткое или 1-длинное.
.equ  BUTTON_IS_PRESSED  	= 6  ; Флаг "зафиксировано полноценное нажатие кнопки": "0" - кнопка не нажималась, "1" - было нажатие.
.equ  BUTTON_IS_HOLDDOWN  	= 7  ; Флаг "кнопка удерживается в нажатом состоянии": "0" - сейчас кнопка "отпущена", "1" - сейчас кнопка "нажата и удерживается".

.equ  BSC_NotPressed  		= 0b000  ; "не нажата"    (исходное положение для всех кнопок - бывает только после "сброса")
.equ  BSC_ShortHold  		= 0b100  ; "короткое удержание"  (кнопка нажата, и всё ещё удерживается, пока "короткое" время)
.equ  BSC_LongHold  		= 0b101  ; "длинное удержание"  (кнопка нажата, и всё ещё удерживается, уже "длительное" время)
.equ  BSC_ShortPress  		= 0b010  ; "короткое нажатие"  (кнопка была нажата, и затем отпущена, а время её удержания было "незначительным")
.equ  BSC_LongPress  		= 0b011  ; "длинное нажатие"  (кнопка была нажата, и затем отпущена, а время её удержания было "длительным")

.equ  CShortButtonTouchDuration = 10  	; длительность длинного нажатия в х100 мс
.equ  DebounceLength = 47				; длительность защитного интервала в количествах вызовов процедуры сканирования кнопки
.equ  CButtonInputChannelCount = 1		; количество кнопок
; ----------------------------------------------------------------------------------------
// -- Управляющик коды для вывода на дисплей --
.equ EOS		= $80	; конец строки
.equ F			= $81	; шрифт No, второй байт номер шрифта
.equ Line		= $82	; линия, Y, X1, X2, Pattern
.equ XY			= $83	; позиционирование, следом идут два байта: координата X и Y
.equ dXdY		= $84	; сдвиг на X,Y (два байта следом)
.equ SetPos 	= $85	; Позиционировать управляющего символа в следующем байте без разрешения на вывод

.equ Range			= $88	; Индикатор вхождения напряжения в допустимый коридор
.equ TargetV		= $89	; Индикатор целевого напряжения
.equ OutputV		= $8A	; Индикатор измеренного напряжения

; ----------------------------------------------------------------------------------------
